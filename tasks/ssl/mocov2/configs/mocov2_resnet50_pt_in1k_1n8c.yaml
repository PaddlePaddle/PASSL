# global configs
Global:
  task_type: ContrastiveLearning
  train_loop: ContrastiveLearningTrainingEpochLoop
  validate_loop: None
  checkpoint: null
  pretrained_model: null
  output_dir: ./output/
  device: gpu
  save_interval: 1
  max_num_latest_checkpoint: 0
  eval_during_train: False
  eval_interval: 1
  eval_unit: "epoch"
  accum_steps: 1
  epochs: 200
  print_batch_step: 10
  use_visualdl: False
  seed: 2023
  
DistributedStrategy:
  data_parallel: True

# model architecture
Model:
  name: mocov2_resnet50_pretrain

LRScheduler:
  name: CosineDecay
  decay_unit: epoch
  learning_rate: 0.03

Optimizer:
  name: Momentum
  momentum: 0.9
  weight_decay: 0.0001

# data loader for train and eval
DataLoader:
  Train:
    dataset:
      name: ImageFolder
      root: ./dataset/ILSVRC2012/train
      transform:
        - TwoViewsTransform:
            base_transform1:
              - RandomResizedCrop:
                  size: 224
                  scale: [0.2, 1.0]
                  interpolation: bicubic
              - ColorJitter:
                  brightness: 0.4
                  contrast: 0.4
                  saturation: 0.4
                  hue: 0.1
                  p: 0.8
              - RandomGrayscale:
                  p: 0.2
              - GaussianBlur:
                  sigma: [.1, 2.]
                  p: 0.5
              - RandFlipImage:
                  flip_code: 1
              - ToTensor:
              - Normalize:
                  mean: [0.5, 0.5, 0.5]
                  std: [0.5, 0.5, 0.5]
            base_transform2:
              - RandomResizedCrop:
                  size: 224
                  scale: [0.2, 1.0]
                  interpolation: bicubic
              - ColorJitter:
                  brightness: 0.4
                  contrast: 0.4
                  saturation: 0.4
                  hue: 0.1
                  p: 0.8
              - RandomGrayscale:
                  p: 0.2
              - GaussianBlur:
                  sigma: [.1, 2.]
                  p: 0.5
              - RandFlipImage:
                  flip_code: 1
              - ToTensor:
              - Normalize:
                  mean: [0.5, 0.5, 0.5]
                  std: [0.5, 0.5, 0.5]
    sampler:
      name: DistributedBatchSampler
      batch_size: 32
      drop_last: True
      shuffle: True
    loader:
      num_workers: 8
      use_shared_memory: True
