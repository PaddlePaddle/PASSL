# global configs
Global:
  task_type: Classification
  train_loop: ClassificationTrainingEpochLoop
  validate_loop: ClassificationEvaluationLoop
  checkpoint: null
  pretrained_model: ./output/mocov2_resnet50_pretrain/latest_base_encoder
  output_dir: ./output/
  device: gpu
  save_interval: 1
  max_num_latest_checkpoint: 0
  eval_during_train: True
  eval_interval: 1
  eval_unit: "epoch"
  accum_steps: 1
  epochs: 100
  print_batch_step: 10
  use_visualdl: False
  seed: 2022

# FP16 setting
FP16:
  level: O0

DistributedStrategy:
  data_parallel: True

# model architecture
Model:
  name: mocov2_resnet50_linearprobe
  class_num: 1000

# loss function config for traing/eval process
Loss:
  Train:
    - CELoss:
        weight: 1.0
  Eval:
    - CELoss:
        weight: 1.0

LRScheduler:
  name: MultiStepDecay
  decay_unit: epoch
  learning_rate: 30.0
  gamma: 0.1
  milestones: [60, 80]

Optimizer:
  name: Momentum
  momentum: 0.9
  weight_decay: 0.0

# data loader for train and eval
DataLoader:
  Train:
    dataset:
      name: ImageFolder
      root: ./dataset/ILSVRC2012/train
      transform:
        - RandomResizedCrop:
            size: 224
        - RandFlipImage:
            flip_code: 1
        - ToTensor:
        - Normalize:
            mean: [0.5, 0.5, 0.5]
            std: [0.5, 0.5, 0.5]

    sampler:
      name: DistributedBatchSampler
      batch_size: 32
      drop_last: True
      shuffle: True
    loader:
      num_workers: 8
      use_shared_memory: True

  Eval:
    dataset:
      name: ImageFolder
      root: ./dataset/ILSVRC2012/val
      transform:
        - ResizeImage:
            resize_short: 256
            interpolation: bilinear
            backend: pil
        - CenterCropImage:
            size: 224
        - ToTensor:
        - Normalize:
            mean: [0.5, 0.5, 0.5]
            std: [0.5, 0.5, 0.5]

    sampler:
      name: DistributedBatchSampler
      batch_size: 64
      drop_last: False
      shuffle: False

    loader:
      num_workers: 8
      use_shared_memory: True

Metric:
  Train:
    - TopkAcc:
        topk: [1, 5]
  Eval:
    - TopkAcc:
        topk: [1, 5]

Export:
  export_type: paddle
  input_shape: [None, 3, 224, 224]
